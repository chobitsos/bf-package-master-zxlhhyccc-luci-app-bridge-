#!/bin/sh
. /etc/rc.common

START=99
USE_PROCD=1

NAME=frpc
PROG=/usr/bin/$NAME

make_dir() {
	local d
	for d in "$@"; do
		[ -d "$d" ] || mkdir -p "$d" 2>/dev/null || return 1
	done
	return 0
}

log_dir() {
	config_get log_file "common" "log_file" ""
	log_file="${log_file:-"/var/log/frpc.log"}"
	local log_dir="$(dirname "$log_file")"

	[ -s "$log_file" ] || {
		[ -d "$log_dir" ] || make_dir "$log_dir" || return 1
	}
}

_err() {
	echo "$*" >&2
	logger -p daemon.err -t "$NAME" "$*"
}

conf_file="/var/etc/${NAME}.toml"
cur_section=""

config_cb() {
	[ $# -lt 1 ] && return

	local type="$1"
	local name="$2"

	case "$type" in
		common)
			cur_section=""
			;;

		proxies)
			echo "" >> "$conf_file"
			echo "[[$type]]" >> "$conf_file"
			cur_section="$type"
			;;

		*)
			# 普通 [section] 格式
			echo "" >> "$conf_file"
			echo "[$name]" >> "$conf_file"
			cur_section="$name"
			;;
	esac
}

option_cb() {
	local option="$1"
	local value="$2"
	[ -n "$option" ] && echo "$option = \"$value\"" >> "$conf_file"
}

list_cb() {
	local name="$1"
	local value="$2"
	echo "$name = \"$value\"" >> "$conf_file"
}

service_triggers() {
	procd_add_reload_trigger "$NAME"
}

start_service() {
	local init_cfg="init"

	> "$conf_file"
	config_load "$NAME"

	log_dir

	local enabled
	config_get_bool enabled "common" 'enabled' '0'
	[ "$enabled" = "1" ] || return 1

	local stdout stderr user group respawn env conf_inc
	uci_validate_section "$NAME" "$init_cfg" "$init_cfg" \
		'stdout:bool:1' \
		'stderr:bool:1' \
		'user:string' \
		'group:string' \
		'respawn:bool:1' \
		'env:list(string)' \
		'conf_inc:list(string)'

	[ $? -ne 0 ] && {
		_err "uci_validate_section failed"
		return 1
	}

	[ -n "$conf_inc" ] && config_list_foreach "$init_cfg" conf_inc cat >> "$conf_file"

	procd_open_instance
	procd_set_param command "$PROG" -c "$conf_file"
	procd_set_param file "$conf_file"
	procd_set_param stdout "$stdout"
	procd_set_param stderr "$stderr"
	[ -n "$user" ] && procd_set_param user "$user"
	[ -n "$group" ] && procd_set_param group "$group"
	[ "$respawn" -eq 1 ] && procd_set_param respawn
	[ -n "$env" ] && config_list_foreach "$init_cfg" env "procd_append_param env"
	procd_close_instance
}

